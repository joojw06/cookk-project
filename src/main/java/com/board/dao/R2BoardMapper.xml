<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper   
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
    
<mapper namespace="Board">  
 
<!--1.re_board 테이블에서 SQL작업(1.글목록보기)   -->  
<select id="selectList2" parameterType="map"  resultType="R2BoardVO">
    select board_num,title,writer,category,cook1,cook2,re_view,postdate,main_img,heart
     	 from (select a.*,rownum rnum
     	   from (select * from re_board2
     	         <where>
     	         	<if test="keyWord!=null and keyField=='title'">
     	         	      title like '%' || #{keyWord} || '%'
     	         	</if>
     	         	<if test="keyWord!=null and keyField=='writer'">
     	         	      writer like '%' || #{keyWord} || '%'
     	         	</if>
     	         	<if test="keyWord!=null and keyField=='cook2'">
     	         	      cook2 like '%' || #{keyWord} || '%'
     	         	</if>
     	         	<if test="keyWord!=null and keyField=='all'">
     	         	      title like '%' || #{keyWord} || '%' or
     	         	      writer like '%' || #{keyWord} || '%' or
     	         	      cook2 like '%' || #{keyWord} || '%'
     	         	</if>
     	         </where>
     	   order by board_num desc) a) 
   <![CDATA[
    where rnum >=#{start} AND rnum <=#{end}
     ]]>
</select>
  <!-- 조회수 높은순으로 게시물 뽑기 -->
 <select id="selectMax_review"  resultType="R2BoardVO" >
 		select rownum "num",main_img,re_view,category,title,board_num
          from (
                    select main_img,re_view,category,title,board_num
                    from re_board2
                    order by re_view desc)
    <![CDATA[
    where rownum <=3
     ]]>
 </select>
 <!-- 2.검색어에 해당하는 총레코드수 구하기(java.lang.Integer->Integer->int) -->
 <select id="selectCount" parameterType="map" resultType="Integer">
    select count(*) from re_board2
 			<where>
     	         	<if test="keyWord!=null and keyField=='title'">
     	         	      title like '%' || #{keyWord} || '%'
     	         	</if>
     	         	<if test="keyWord!=null and keyField=='writer'">
     	         	      writer like '%' || #{keyWord} || '%'
     	         	</if>
     	         	<if test="keyWord!=null and keyField=='cook2'">
     	         	      cook2 like '%' || #{keyWord} || '%'
     	         	</if>
     	         	<if test="keyWord!=null and keyField=='all'">
     	         	      title like '%' || #{keyWord} || '%' or
     	         	      writer like '%' || #{keyWord} || '%' or
     	         	      cook2 like '%' || #{keyWord} || '%'
     	         	</if>
     	         </where>
 </select>
 
 <!--최대값구하기  -->
 <select id="getNewSeq2" resultType="int">
 	select max(board_num) from re_board2
 </select>
 
 <!--3. 글쓰기  hit는 값을 입력해주지 않는다. (sysdate,mysql(new()),  
 		업로드하는 파일명만 jdbcType=VARCHAR(문자열이라는구문)추가 -->
 		
 <insert id="insertBoard2" parameterType="R2BoardVO">
    insert into re_board2(board_num,mem_id,title,writer,category,cook1,cook2,re_view,postdate,main_img)
    values(#{board_num},#{mem_id},#{title},#{writer},#{category},#{cook1},#{cook2},0,sysdate,
             #{main_img,jdbcType=VARCHAR})
 </insert>

 <!-- 4. 조회수 증가하기 java.lang.String=>String(O)=>string(X)-->
 <update id="updateHit" parameterType="Integer">
    update re_board2 set re_view=re_view+1 where board_num=#{board_num}
 </update>
 
 <!-- 5. 게시물번호에 따른 글상세보기(레코드 한개 출력)  -->
 <select id="selectBoard2" parameterType="Integer" resultType="R2BoardVO">
    select * from re_board2 where board_num=#{board_num}
 </select>
 
  <!-- 6.글삭제하기 -->
 <delete id="deleteBoard2" parameterType="Integer">
    delete from re_board2 where board_num=#{board_num}
 </delete>
 
 <!-- 7.글수정하기  -->
 <update id="updateBoard2" parameterType="R2BoardVO">
    update re_board2 set title=#{title},category=#{category},cook1=#{cook1},cook2=#{cook2},
    main_img=#{main_img}
    where board_num=#{board_num}
 </update>
 
 
  <!-- 좋아요증가 -->
 <update id="upLike99" parameterType="int">
	update re_board2 set heart = heart + 1 
	where board_num = #{board_num}
</update>
	<!-- 좋아요감소 -->
<update id="downLike99" parameterType="int">
	update re_board2 set heart = heart - 1
	where board_num = #{board_num}
</update>

<!-- 좋아요등록 -->
<insert id="insertLikeInfo99" parameterType="hashmap">
	insert into  likeCheck(board_num, mem_id) 
	values(#{board_num}, #{mem_id})
</insert>

<!-- 좋아요삭제	 -->
<delete id="deleteLikeInfo99" parameterType="hashmap">
	delete from likeCheck
	where board_num = #{board_num} and mem_id = #{mem_id}
</delete>
	
<!-- 좋아요 총갯수  -->
<select id="checkLike99" parameterType="hashmap" resultType="int">
	select count(*) from likeCheck 
	where board_num = #{board_num} and mem_id = #{mem_id}
</select> 

<!-- 최종상태값 -->
<select id="likeCnt99" parameterType="int" resultType="int">
	select heart  from re_board2 
	where board_num = #{board_num}
</select>

<!-- 아이디로 작성자 찾기 -->
	<select id="findOne99" resultType="String">
		select writer from member where mem_id=#{mem_id}
	</select>
 
 </mapper>